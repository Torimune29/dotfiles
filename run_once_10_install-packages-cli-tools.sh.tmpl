#!/usr/bin/env bash

set -e

. $HOME/.local/bin/my_own/_log
. $HOME/.local/bin/my_own/_gather_facts

{{ if promptString "installMode" eq "minimal" -}}
print_script_info "installMode is minimal. skip"
return 0
{{ end }}

declare -A versions=(
  ["asdf"]="v0.10.2"
  ["chezmoi"]="latest"
  ["direnv"]="latest"
  ["bat"]="latest"
  ["ripgrep"]="latest"
  ["exa"]="latest"
  ["zoxide"]="latest"
  ["delta"]="latest"
  ["starship"]="latest"
  ["fd"]="latest"
  ["fzf"]="latest"
  ["ghq"]="latest"
  ["github-cli"]="latest"
  ["gojq"]="latest"
  ["watchexec"]="1.20.5"
  ["navi"]="v2.20.1"
  ["neovim"]="stable"
  ["tmux"]="v3.2"
  ["fpp"]="0.9.5"
  ["semver"]="latest"
  ["gron"]="0.7.1"
  ["jc"]="1.22.0"
  ["pandoc"]="2.19.2"
  ["git-crypt"]="0.7.0"
  ["mcfly"]="0.6.1"
  ["monolith"]="2.6.2"
  ["xplr"]="latest"
  ["s"]="0.6.6"
  ["hledger"]="1.27.1"
  ["dust"]="latest"
  ["up"]="latest"
  ["usql"]="latest"
  ["hyperfine"]="latest"
  ["gcm"]="2.0.785"
  ["ouch"]="0.3.1"
  ["sd"]="0.7.6"
)

print_script_info

{{ if and (not (lookPath "asdf")) (not (stat (joinPath .chezmoi.homeDir ".asdf"))) -}}
# install asdf
git clone --depth=1 https://github.com/asdf-vm/asdf.git $HOME/.asdf -b ${versions["asdf"]}
{{ end -}}
. $HOME/.asdf/asdf.sh

{{ if not (lookPath "chezmoi") -}}
# chezmoi
asdf plugin add chezmoi || true
asdf install chezmoi ${versions["chezmoi"]}
asdf global chezmoi ${versions["chezmoi"]}
{{ end -}}

{{ if not (lookPath "direnv") -}}
# dienv
asdf plugin-add direnv || true
asdf direnv setup --shell bash --version ${versions["direnv"]}
asdf global direnv ${versions["direnv"]}
{{ end -}}

{{ if not (lookPath "bat") -}}
# bat
asdf plugin add bat || true
asdf install bat ${versions["bat"]}
asdf global bat ${versions["bat"]}
{{ end -}}

{{ if not (lookPath "rg") -}}
# ripgrep
asdf plugin add ripgrep || true
asdf install ripgrep ${versions["ripgrep"]}
asdf global ripgrep ${versions["ripgrep"]}
{{ end -}}

{{ if not (lookPath "exa") -}}
# exa
asdf plugin add exa || true
asdf install exa ${versions["exa"]}
asdf global exa ${versions["exa"]}
{{ end -}}

{{ if not (lookPath "zoxide") -}}
# zoxide
asdf plugin add zoxide https://github.com/nyrst/asdf-zoxide.git || true
asdf install zoxide ${versions["zoxide"]}
asdf global zoxide ${versions["zoxide"]}
{{ end -}}

{{ if not (lookPath "delta") -}}
# delta
asdf plugin add delta || true
asdf install delta ${versions["delta"]}
asdf global delta ${versions["delta"]}
{{ end -}}

{{ if not (lookPath "starship") -}}
# starship
asdf plugin add starship || true
asdf install starship ${versions["starship"]}
asdf global starship ${versions["starship"]}
{{ end -}}

{{ if not (lookPath "fd") -}}
# fd
asdf plugin add fd || true
asdf install fd ${versions["fd"]} 1>/dev/null
asdf global fd ${versions["fd"]}
{{ end -}}

{{ if not (lookPath "fzf") -}}
# fzf
asdf plugin add fzf https://github.com/kompiro/asdf-fzf.git || true
asdf install fzf ${versions["fzf"]}
asdf global fzf ${versions["fzf"]}
# fzf-tab-completion
rm -rf $HOME/.local/share/fzf > /dev/null 2>&1
mkdir -p $HOME/.local/share/fzf
curl --silent -o $HOME/.local/share/fzf/fzf-bash-completion.sh https://raw.githubusercontent.com/lincheney/fzf-tab-completion/master/bash/fzf-bash-completion.sh
{{ end -}}

{{ if not (lookPath "ghq") -}}
# ghq
asdf plugin-add ghq https://github.com/kajisha/asdf-ghq || true
asdf install ghq ${versions["ghq"]} || true
asdf global ghq ${versions["ghq"]} || true
{{ end -}}

{{ if not (lookPath "gh") -}}
# github-cli
asdf plugin-add github-cli https://github.com/bartlomiejdanek/asdf-github-cli.git || true
asdf install github-cli ${versions["github-cli"]} 1>/dev/null
asdf global github-cli ${versions["github-cli"]}
{{ end -}}

{{ if not (lookPath "gojq") -}}
# gojq
asdf plugin-add jq https://github.com/jimmidyson/asdf-gojq.git || true
asdf install jq ${versions["gojq"]}
asdf global jq ${versions["gojq"]}
{{ end -}}

{{ if not (lookPath "watchexec") -}}
# watchexec
asdf plugin add watchexec https://github.com/nyrst/asdf-watchexec.git || true
asdf install watchexec ${versions["watchexec"]}
asdf global watchexec ${versions["watchexec"]}
{{ end -}}

{{ if not (lookPath "navi") -}}
# navi
curl -L https://github.com/denisidoro/navi/releases/download/${versions["navi"]}/navi-${versions["navi"]}-x86_64-unknown-linux-musl.tar.gz | tar xz -C $HOME/.local/bin/
{{ end -}}

{{ if not (lookPath "nvim") -}}
# neovim
asdf plugin add neovim || true
asdf install neovim ${versions["neovim"]}
asdf global neovim ${versions["neovim"]}
{{ end -}}

{{ if not (lookPath "tmux") -}}
# tmux
curl -sL -o $HOME/.local/bin/tmux https://github.com/pythops/tmux-linux-binary/releases/download/${versions["tmux"]}/tmux
chmod +x $HOME/.local/bin/tmux
{{ end -}}

{{ if not (lookPath "fpp") }}
# fpp
rm -rf $HOME/.local/bin/fpp ${XDG_DATA_HOME:-$HOME/.local/share}/PathPicker > /dev/null 2>&1
git clone --depth=1 https://github.com/facebook/PathPicker.git ${XDG_DATA_HOME:-$HOME/.local/share}/PathPicker -b ${versions["fpp"]}
pushd ${XDG_DATA_HOME:-$HOME/.local/share}/PathPicker > /dev/null 2>&1 || exit
ln -s "$(pwd)/fpp" $HOME/.local/bin/fpp
popd > /dev/null 2>&1 || exit
{{ end -}}

# semver
# install force to resolve conflict nodejs semver
asdf plugin add semver || true
asdf install semver ${versions["semver"]}
asdf global semver ${versions["semver"]}

{{ if not (lookPath "gron") -}}
# gron
curl -sL https://github.com/tomnomnom/gron/releases/download/v${versions["gron"]}/gron-linux-amd64-${versions["gron"]}.tgz | tar xz -C $HOME/.local/bin/
{{ end -}}

{{ if not (lookPath "jc") -}}
# jc
curl -sL https://github.com/kellyjonbrazil/jc/releases/download/v${versions["jc"]}/jc-${versions["jc"]}-linux-x86_64.tar.gz | tar xz -C $HOME/.local/bin/
$HOME/.local/bin/jc --bash-comp > ${XDG_CONFIG_HOME:-$HOME/.config}/bash_completion.d/jc
{{ end -}}

{{ if not (lookPath "pandoc") -}}
# pandoc
curl -sL https://github.com/jgm/pandoc/releases/download/${versions["pandoc"]}/pandoc-${versions["pandoc"]}-linux-amd64.tar.gz | tar xz -C /tmp
cp /tmp/pandoc-${versions["pandoc"]}/bin/* $HOME/.local/bin
rm -rf /tmp/pandoc-${versions["pandoc"]}
{{ end -}}

{{ if not (lookPath "git-crypt") -}}
# git-crypt
curl -sL https://github.com/AGWA/git-crypt/releases/download/${versions["git-crypt"]}/git-crypt-${versions["git-crypt"]}-linux-x86_64 -o $HOME/.local/bin/git-crypt
chmod +x $HOME/.local/bin/git-crypt
{{ end -}}

{{ if not (lookPath "mcfly") -}}
# mcfly
curl -sL https://github.com/cantino/mcfly/releases/download/v${versions["mcfly"]}/mcfly-v${versions["mcfly"]}-x86_64-unknown-linux-musl.tar.gz | tar xz -C $HOME/.local/bin/
{{ end -}}

{{ if not (lookPath "monolith") -}}
# monolith
curl -sL https://github.com/Y2Z/monolith/releases/download/v${versions["monolith"]}/monolith-gnu-linux-x86_64 -o $HOME/.local/bin/monolith
chmod +x $HOME/.local/bin/monolith
{{ end -}}

{{ if not (lookPath "xplr") -}}
# xplr
curl -sL https://github.com/sayanarijit/xplr/releases/${versions["xplr"]}/download/xplr-linux.tar.gz | tar xz -C $HOME/.local/bin/
{{ end -}}

{{ if not (lookPath "s") -}}
# s
curl -sL https://github.com/zquestz/s/releases/download/v${versions["s"]}/s-linux_amd64.zip -o /tmp/s-linux_amd64.zip
unzip /tmp/s-linux_amd64.zip -d /tmp
cp /tmp/s-linux_amd64/s $HOME/.local/bin/s
chmod +x $HOME/.local/bin/s
rm -rf /tmp/s-linux_amd64*
{{ end -}}

{{ if not (lookPath "hledger") -}}
# hledger
curl -sL https://github.com/simonmichael/hledger/releases/download/${versions["hledger"]}/hledger-linux-x64.zip  -o /tmp/hledger-linux-x64.zip
unzip /tmp/hledger-linux-x64.zip -d /tmp && tar xf /tmp/hledger-linux-x64.tar -C /tmp
cp /tmp/hledger $HOME/.local/bin/
cp /tmp/hledger-ui $HOME/.local/bin/
cp /tmp/hledger-web $HOME/.local/bin/
rm -rf /tmp/hledger*
{{ end -}}

{{ if not (lookPath "dust") -}}
# dust
asdf plugin-add dust https://github.com/looztra/asdf-dust || true
asdf install dust ${versions["dust"]}
asdf global dust ${versions["dust"]}
{{ end -}}

{{ if not (lookPath "up") -}}
# Ultimate Plumber(up)
curl -sL https://github.com/akavel/up/releases/${versions["up"]}/download/up -o $HOME/.local/bin/up
chmod +x $HOME/.local/bin/up
{{ end -}}

{{ if not (lookPath "usql") -}}
# usql
asdf plugin-add usql https://github.com/itspngu/asdf-usql
asdf install usql ${versions["usql"]}
asdf global usql ${versions["usql"]}
{{ end -}}

{{ if not (lookPath "hyperfine") -}}
# hyperfine
asdf plugin add hyperfine || true
asdf install hyperfine ${versions["hyperfine"]}
asdf global hyperfine ${versions["hyperfine"]}
{{ end -}}

{{ if not (lookPath "git-credential-manager-core") -}}
# git-credential-manager-core
curl -sL https://github.com/GitCredentialManager/git-credential-manager/releases/download/v${versions["gcm"]}/gcm-linux_amd64.${versions["gcm"]}.tar.gz | tar xz -C $HOME/.local/bin
DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1 $HOME/.local/bin/git-credential-manager-core configure
{{ end -}}

{{ if not (lookPath "ouch") -}}
# ouch
curl -sL https://github.com/ouch-org/ouch/releases/download/${versions["ouch"]}/ouch-x86_64-linux-musl -o $HOME/.local/bin/ouch
chmod +x $HOME/.local/bin/ouch
{{ end -}}

{{ if not (lookPath "sd") -}}
# sd
curl -sL https://github.com/chmln/sd/releases/download/v${versions["sd"]}/sd-v${versions["sd"]}-x86_64-unknown-linux-gnu -o $HOME/.local/bin/sd
chmod +x $HOME/.local/bin/sd
{{ end -}}


log_success "$0 done."
